{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 8,
  "links": [],
  "panels": [
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 8,
        "x": 0,
        "y": 0
      },
      "id": 29,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^nombre_sensor$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": false
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select nombre_sensor, inactivo as \"Estado\", bateria, dev_eui, topic \r\nfrom $esq.sensores where id in ($sensor)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Nombre Sensor",
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "false": {
                  "color": "green",
                  "index": 0,
                  "text": "Activo"
                },
                "true": {
                  "color": "red",
                  "index": 1,
                  "text": "Inactivo"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 8,
        "y": 0
      },
      "id": 49,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Estado$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 29,
          "refId": "A"
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "orange",
                  "index": 0,
                  "text": "Sin Alerta"
                },
                "1": {
                  "color": "green",
                  "index": 1,
                  "text": "Normal"
                },
                "2": {
                  "color": "yellow",
                  "index": 2,
                  "text": "Advertencia"
                },
                "3": {
                  "color": "red",
                  "index": 3,
                  "text": "Alarma"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 10,
        "y": 0
      },
      "id": 66,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select $esq.getestadoalertasensor('$sensor', '${__from:date}', '${__to:date}') as \"Estado Alerta\"",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "fieldMinMax": false,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 7,
        "x": 12,
        "y": 0
      },
      "id": 14,
      "options": {
        "displayMode": "basic",
        "maxVizHeight": 300,
        "minVizHeight": 16,
        "minVizWidth": 8,
        "namePlacement": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^bateria$/",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "valueMode": "color"
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 29,
          "refId": "A"
        }
      ],
      "title": "Bater√≠a",
      "type": "bargauge"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 5,
        "x": 19,
        "y": 0
      },
      "id": 61,
      "options": {
        "afterRender": "",
        "content": "<table>\n  {{#each this}}\n  \n  {{#if (eq @key \"statusColor\")}}\n  {{else}}\n  <tr>\n    <th>{{@key}}</th>\n    <td>{{this}}</td>\n  </tr>\n  {{/if}}\n  {{/each}}\n</table>",
        "contentPartials": [],
        "defaultContent": "The query didn't return any results.",
        "editor": {
          "format": "auto",
          "language": "html"
        },
        "editors": [],
        "externalStyles": [],
        "helpers": "",
        "renderMode": "everyRow",
        "styles": "",
        "wrap": true
      },
      "pluginVersion": "5.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select \r\n  dev_eui as \"DevEUI\", \r\n  -- b.nombre as \"Bodega\",\r\n  -- to_char(\r\n  --   (fecha_instalacion at time zone 'America/Guayaquil'), \r\n  --   'YYYY-MM-DD\" \"HH:MI') as \"Fecha Instalaci√≥n\",\r\n  topic as \"Topic\", \r\n  g.nombre as \"Nombre Gateway\"\r\nfrom $esq.sensores s \r\n  inner join $esq.gateways g on g.id = s.id_gateway\r\n  -- inner join $esq.bodegas b on b.id = s.id_bodega\r\nwhere s.id in ($sensor) limit 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Informaci√≥n General",
      "type": "marcusolsson-dynamictext-panel"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 5,
        "w": 8,
        "x": 0,
        "y": 3
      },
      "id": 19,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "allowCustomValue": false,
            "id": "id_area",
            "labelWidth": 10,
            "options": [],
            "optionsSource": "Query",
            "queryField": {
              "label": "Sensor:id_area",
              "refId": "Sensor",
              "value": "id_area"
            },
            "queryOptions": {
              "label": "nombre",
              "source": "Areas",
              "value": "id"
            },
            "section": "1",
            "showIf": "",
            "title": "Area",
            "tooltip": "",
            "type": "select",
            "uid": "73598dd3-b0d8-4651-b620-a4d85e7bf3c7",
            "unit": "",
            "value": false
          },
          {
            "id": "fecha_instalacion",
            "isUseLocalTime": true,
            "labelWidth": 15,
            "max": "",
            "queryField": {
              "label": "Sensor:fecha_instalacion",
              "refId": "Sensor",
              "value": "fecha_instalacion"
            },
            "section": "1",
            "title": "Fecha Instalaci√≥n",
            "tooltip": "",
            "type": "datetime",
            "uid": "dd8cb40d-c5a8-4520-ab26-fb32387baaf7",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "",
          "contentType": "application/json",
          "datasource": "Postgres",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "orange",
          "method": "query",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "1",
              "name": ""
            },
            {
              "id": "2",
              "name": ""
            }
          ],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reiniciar",
          "variant": "secondary"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Actualizar",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "const stringRes = context.panel.response.data[0].fields[0].values[0]\nconst response = JSON.parse(stringRes)[0]\n\n// console.log(response)\nif (response.ok) {\n  context.grafana.notifySuccess(['Exito', response.observacion]);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Error', response.mensaje]);\n}",
          "confirm": false,
          "contentType": "application/json",
          "datasource": "Postgres",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\npayload.id_sensor = $sensor;\n// payload.estado = payload[\"estado\"] == '1' ? true : false;\n// payload.fecha_instalacion = new Date(payload[\"fecha_instalacion\"]);\n\npayload.user_id = $__user;\npayload.user_login = '${__user.login}';\npayload.user_email = '${__user.email}';\n\nreturn payload;",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select esq_dash_iot.actualizarsensor(\r\n  '${payload.id_sensor}', \r\n  '${payload.id_area}', \r\n  '${payload.fecha_instalacion}', \r\n  '${payload.user_email}'\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom",
          "url": "${api_url:text}/api/sensores/actualizarsensor"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.8.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select id, nombre from $esq.areas order by orden",
          "refId": "Areas",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select id_area, fecha_instalacion from $esq.sensores where id in ($sensor)",
          "refId": "Sensor",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Configuraci√≥n",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "description": "",
      "gridPos": {
        "h": 5,
        "w": 6,
        "x": 8,
        "y": 3
      },
      "id": 56,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "const entidadEl = context.panel.elements.find(el => el.id === 'entidad')\r\nconst fechaEl = context.panel.elements.find(el => el.id === 'fecha')\r\n\r\nif (entidadEl.value.trim() === '' || fechaEl.value === '') {\r\n  context.panel.disableSubmit();\r\n} else {\r\n  context.panel.enableSubmit();\r\n}",
        "elements": [
          {
            "hidden": false,
            "id": "entidad",
            "labelWidth": 10,
            "section": "",
            "title": "Entidad",
            "tooltip": "",
            "type": "string",
            "uid": "8bf945ea-0954-4507-a6f7-28a1ca94eb29",
            "unit": "",
            "value": ""
          },
          {
            "disableIf": "const entidadEl = context.panel.elements.find(el => el.id === 'entidad')\r\n\r\nreturn entidadEl.value.trim() === ''",
            "id": "fecha",
            "isUseLocalTime": false,
            "labelWidth": 10,
            "section": "",
            "showIf": "",
            "title": "Fecha",
            "tooltip": "",
            "type": "datetime",
            "uid": "d222fff7-6017-4e2f-9a62-679d73171ef8",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "",
          "contentType": "application/json",
          "datasource": "Postgres",
          "getPayload": "return {}",
          "highlight": false,
          "highlightColor": "orange",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "1",
              "name": ""
            },
            {
              "id": "2",
              "name": ""
            }
          ],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reiniciar",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "plus",
          "text": "Nueva Calibraci√≥n",
          "variant": "primary"
        },
        "sync": false,
        "update": {
          "code": "const stringRes = context.panel.response.data[0].fields[0].values[0]\nconst response = JSON.parse(stringRes)[0]\n\n// console.log(response)\nif (response.ok) {\n  context.grafana.notifySuccess(['Exito', response.observacion]);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Error', response.mensaje]);\n}",
          "confirm": false,
          "contentType": "application/json",
          "datasource": "Postgres",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\npayload.id_sensor = $sensor;\n\npayload.user_id = $__user;\npayload.user_login = '${__user.login}';\npayload.user_email = '${__user.email}';\n\nreturn payload;",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select esq_dash_iot.guardarCalibracion(\r\n  '${payload.id_sensor}', \r\n  '${payload.fecha}',\r\n  '${payload.entidad}',\r\n  '${payload.user_email}'\r\n)",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom",
          "url": "${api_url:text}/api/sensores/guardarcalibracion"
        },
        "updateEnabled": "manual"
      },
      "pluginVersion": "4.8.0",
      "title": "Registrar Nueva Calibraci√≥n",
      "type": "volkovlabs-form-panel"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "noValue": "No hay Calibraciones",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Fecha"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 5,
        "x": 14,
        "y": 3
      },
      "id": 54,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select fecha as \"Fecha\", entidad as \"Entidad\"\r\nfrom $esq.calibraciones\r\nwhere id_sensor in ($sensor) \r\norder by fecha desc, id desc",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Calibraciones",
      "transformations": [
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "dateFormat": "YYYY-MM-DD",
                "destinationType": "string",
                "targetField": "Fecha",
                "timezone": "browser"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 8
      },
      "id": 2,
      "panels": [],
      "repeat": "tipo_medicion",
      "repeatDirection": "h",
      "title": "Medici√≥n: $tipo_medicion",
      "type": "row"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "dashed"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 17,
        "x": 0,
        "y": 9
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "select $__timeGroup(tiempo, $__interval), INITCAP($tipo_medicion), valor as \" \"\r\nfrom $esq.mediciones where $__timeFilter(tiempo) and id_sensor in ($sensor) and tipo_medicion in ($tipo_medicion)\r\norder by time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ($tipo_medicion)",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select unidad from esq_dash_iot.tipo_mediciones where nombre in ($tipo_medicion)",
          "refId": "unidad",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Hist√≥rico $tipo_medicion",
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        },
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byType",
              "options": "number"
            },
            "configRefId": "unidad",
            "mappings": [
              {
                "fieldName": "unidad",
                "handlerKey": "unit"
              }
            ]
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 17,
        "y": 9
      },
      "id": 9,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select \r\n ( select valor from $esq.mediciones \r\n  where $__timeFilter(tiempo) \r\n    and id_sensor in ($sensor) \r\n    and tipo_medicion in ($tipo_medicion)\r\n  order by tiempo desc limit 1 ) as \"Actual ${tipo_medicion:text}\", \r\n  max(valor) as \"Maximo ${tipo_medicion:text}\",\r\n  min(valor) as \"Minimo ${tipo_medicion:text}\"\r\nfrom $esq.mediciones \r\nwhere $__timeFilter(tiempo) \r\n  and id_sensor in ($sensor) \r\n  and tipo_medicion in ($tipo_medicion)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ($tipo_medicion)",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select unidad from esq_dash_iot.tipo_mediciones where nombre in ($tipo_medicion)",
          "refId": "unidad",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        },
        {
          "id": "configFromData",
          "options": {
            "configRefId": "unidad",
            "mappings": [
              {
                "fieldName": "unidad",
                "handlerKey": "unit"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 20,
        "y": 9
      },
      "id": 1,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "",
        "elements": [
          {
            "id": "alarma",
            "labelWidth": 12,
            "section": "1",
            "title": "Alarma",
            "tooltip": "",
            "type": "number",
            "uid": "2b598fb3-a6ca-4e7c-af80-5194bc15a186",
            "unit": "",
            "value": 0,
            "width": 10
          },
          {
            "id": "advertencia",
            "labelWidth": 12,
            "section": "1",
            "title": "Advertencia",
            "tooltip": "",
            "type": "number",
            "uid": "5f010309-2a52-40cc-8b3e-3f045d7cbc95",
            "unit": "",
            "value": 0,
            "width": 10
          }
        ],
        "initial": {
          "code": "const columnas = context.panel.data.series[0].fields\n\nif (columnas.length == 0) {\n  const empty = {}\n  context.panel.elements.forEach(el => {\n    empty[el.id] = 0;\n  })\n\n  context.panel.setInitial(empty);\n  context.panel.setFormValue(empty);\n} else {\n  const data = {}\n  columnas.forEach(col => {\n    data[col.name] = col.values[0] == null ? 0 : col.values[0];\n  })\n\n  context.panel.setInitial(data)\n  context.panel.setFormValue(data)\n}\n",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": true,
          "highlightColor": "orange",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 10,
          "sectionVariant": "default",
          "sections": [],
          "variant": "single"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Actualizar",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "const stringRes = context.panel.response.data[0].fields[0].values[0]\nconst response = JSON.parse(stringRes)[0]\n\n// console.log(response)\nif (response.ok) {\n  context.grafana.notifySuccess(['Exito', response.observacion]);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Error', response.mensaje]);\n}",
          "confirm": false,
          "contentType": "application/json",
          "datasource": "Postgres",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  payload[element.id] = element.value;\n})\n\npayload.id_sensor = $sensor;\npayload.tipo_medicion = '$tipo_medicion';\n\npayload.user_id = $__user;\npayload.user_login = '${__user.login}';\npayload.user_email = '${__user.email}';\n\n\nreturn payload;",
          "method": "datasource",
          "payload": {
            "editorMode": "code",
            "format": "table",
            "rawQuery": true,
            "rawSql": "select\r\n  esq_dash_iot.actualizarlimites(\r\n    '${payload.id_sensor}',\r\n    '${payload.tipo_medicion}',\r\n    nullif('${payload.alarma}', '0'),\r\n    nullif('${payload.advertencia}', '0'),\r\n    null,\r\n    null,\r\n    '${payload.user_email}'\r\n  );",
            "refId": "A",
            "sql": {
              "columns": [
                {
                  "parameters": [],
                  "type": "function"
                }
              ],
              "groupBy": [
                {
                  "property": {
                    "type": "string"
                  },
                  "type": "groupBy"
                }
              ],
              "limit": 50
            }
          },
          "payloadMode": "custom",
          "url": "${api_url:text}/api/sensores/actualizarlimites"
        },
        "updateEnabled": "auto"
      },
      "pluginVersion": "4.8.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT\r\n    min, max, advertencia, alarma\r\nFROM $esq.limites\r\nWHERE id_sensor IN ($sensor) AND tipo_medicion IN ($tipo_medicion) \r\nlimit 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Limites $tipo_medicion",
      "type": "volkovlabs-form-panel"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "BG Refrigerador",
          "value": "1"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P44368ADAD746BC27"
        },
        "definition": "select id as __value, nombre_sensor as __text from esq_dash_iot.sensores order by id;",
        "hide": 0,
        "includeAll": false,
        "label": "Sensor",
        "multi": false,
        "name": "sensor",
        "options": [],
        "query": "select id as __value, nombre_sensor as __text from esq_dash_iot.sensores order by id;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P44368ADAD746BC27"
        },
        "definition": "select nombre as __value, INITCAP(nombre) as __text from esq_dash_iot.tipo_mediciones",
        "description": "",
        "hide": 2,
        "includeAll": true,
        "label": "Tipo Medici√≥n",
        "multi": false,
        "name": "tipo_medicion",
        "options": [],
        "query": "select nombre as __value, INITCAP(nombre) as __text from esq_dash_iot.tipo_mediciones",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "name": "api_url",
        "query": "http://24.199.81.227:30055",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "hide": 2,
        "name": "esq",
        "query": "esq_dash_iot",
        "skipUrlSync": false,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Detalles de Sensor",
  "uid": "ddxwcck13f280b",
  "version": 2,
  "weekStart": ""
}
