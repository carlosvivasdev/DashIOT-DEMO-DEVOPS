{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "id": 25,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<h1><b>${area:text}</b></h1>",
        "mode": "html"
      },
      "pluginVersion": "11.2.0",
      "type": "text"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 6,
        "y": 0
      },
      "id": 59,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select count(*) as \"Sensores\" from $esq.sensores \r\nwhere inactivo = false and id_area in ($area)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 9,
        "y": 0
      },
      "id": 60,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "center",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value_and_name",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select count(id) as \"Sens. inactivos\" from $esq.sensores \r\nwhere inactivo = true and id_area in ($area)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 79,
      "options": {
        "buttonGroup": {
          "orientation": "center",
          "size": "md"
        },
        "confirmModal": {
          "body": "Please confirm to update changed values",
          "cancel": "Cancel",
          "columns": {
            "include": [
              "name",
              "oldValue",
              "newValue"
            ],
            "name": "Label",
            "newValue": "New Value",
            "oldValue": "Old Value"
          },
          "confirm": "Confirm",
          "elementDisplayMode": "modified",
          "title": "Confirm update request"
        },
        "elementValueChanged": "if (context.element.id === 'estado_alerta') {\r\n  context.grafana.locationService.partial({\r\n    'var-estado_alerta': context.element.value\r\n  })\r\n  context.grafana.locationService.refresh();\r\n}\r\nif (context.element.id === 'estado_sensor') {\r\n  context.grafana.locationService.partial({\r\n    'var-estado_sensor': context.element.value\r\n  })\r\n  context.grafana.locationService.refresh();\r\n}",
        "elements": [
          {
            "allowCustomValue": false,
            "id": "estado_alerta",
            "labelWidth": 15,
            "options": [
              {
                "icon": "apps",
                "id": "todos",
                "label": "Todos",
                "type": "string",
                "value": "todos"
              },
              {
                "icon": "bell-slash",
                "id": "0",
                "label": "Sin Alerta",
                "type": "string",
                "value": "0"
              },
              {
                "icon": "check",
                "id": "1",
                "label": "Normal",
                "type": "string",
                "value": "1"
              },
              {
                "icon": "exclamation-triangle",
                "id": "2",
                "label": "Advertencia",
                "type": "string",
                "value": "2"
              },
              {
                "icon": "x",
                "id": "3",
                "label": "Alarma",
                "type": "string",
                "value": "3"
              }
            ],
            "optionsSource": "Custom",
            "section": "1",
            "title": "Estado de Alerta",
            "tooltip": "",
            "type": "select",
            "uid": "5cc08d67-4ca2-4644-b9df-30076e36fa34",
            "unit": "",
            "value": ""
          },
          {
            "allowCustomValue": false,
            "id": "estado_sensor",
            "labelWidth": 15,
            "options": [
              {
                "icon": "apps",
                "id": "todos",
                "label": "Todos",
                "type": "string",
                "value": "todos"
              },
              {
                "icon": "check",
                "id": "1",
                "label": "Activo",
                "type": "string",
                "value": "1"
              },
              {
                "icon": "minus-circle",
                "id": "0",
                "label": "Inactivo",
                "type": "string",
                "value": "0"
              }
            ],
            "optionsSource": "Custom",
            "section": "2",
            "title": "Estado Sensor",
            "tooltip": "",
            "type": "select",
            "uid": "dff93834-d28d-483d-8ad3-f466a3924fc3",
            "unit": "",
            "value": ""
          }
        ],
        "initial": {
          "code": "const estadoAlertaEl = context.panel.elements.find(el => el.id === 'estado_alerta');\nconst estadoSensorEl = context.panel.elements.find(el => el.id === 'estado_sensor');\n\nestadoAlertaEl.value = '$estado_alerta';\nestadoSensorEl.value = '$estado_sensor';\n",
          "contentType": "application/json",
          "getPayload": "return {}",
          "highlight": false,
          "highlightColor": "red",
          "method": "-",
          "payload": {}
        },
        "layout": {
          "orientation": "horizontal",
          "padding": 0,
          "sectionVariant": "default",
          "sections": [
            {
              "id": "1",
              "name": ""
            },
            {
              "id": "2",
              "name": ""
            }
          ],
          "variant": "split"
        },
        "reset": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "process",
          "text": "Reset",
          "variant": "hidden"
        },
        "resetAction": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "getPayload": "return {}",
          "mode": "initial",
          "payload": {}
        },
        "saveDefault": {
          "icon": "save",
          "text": "Save Default",
          "variant": "hidden"
        },
        "submit": {
          "backgroundColor": "purple",
          "foregroundColor": "yellow",
          "icon": "cloud-upload",
          "text": "Submit",
          "variant": "primary"
        },
        "sync": true,
        "update": {
          "code": "if (context.panel.response) {\n  context.grafana.notifySuccess(['Update', 'Values updated successfully.']);\n  context.grafana.locationService.reload();\n} else {\n  context.grafana.notifyError(['Update', 'An error occurred updating values.']);\n}",
          "confirm": false,
          "contentType": "application/json",
          "getPayload": "const payload = {};\n\ncontext.panel.elements.forEach((element) => {\n  if (!element.value) {\n    return;\n  }\n\n  payload[element.id] = element.value;\n})\n\nreturn payload;",
          "method": "-",
          "payload": {},
          "payloadMode": "all"
        },
        "updateEnabled": "disabled"
      },
      "pluginVersion": "4.8.0",
      "title": "Filtrar",
      "type": "volkovlabs-form-panel"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 2,
      "panels": [],
      "repeat": "sensor",
      "repeatDirection": "h",
      "title": "Sensor: $sensor",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 4
      },
      "id": 89,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<!-- \n<div class=\"contenedor-link\" style=\"width:100%;height:100%;display:flex;\">\n<a style=\"place-content:center;\" class=\"my-link\" href=\"/d/ddxwcck13f280b/sensor?orgId=1&var-sensor=2\">\n  Ir al Dashboard\n</a>\n</div> -->\n\n<div class=\"css-fi8eaj\" style=\"width:100%;display:flex;align-items:center;padding-top:8px;\">\n  <a class=\"my-link\" href=\"/d/ddxwcck13f280b/sensor?orgId=1&var-sensor=${sensor}\">\n    <button class=\"css-td06pi-button\" type=\"button\" title=\"\" data-testid=\"data-testid panel button-submit\" aria-disabled=\"false\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" width=\"16\" height=\"16\" class=\"css-74awvt-Icon\">\n        <path d=\"M18,10.82a1,1,0,0,0-1,1V19a1,1,0,0,1-1,1H5a1,1,0,0,1-1-1V8A1,1,0,0,1,5,7h7.18a1,1,0,0,0,0-2H5A3,3,0,0,0,2,8V19a3,3,0,0,0,3,3H16a3,3,0,0,0,3-3V11.82A1,1,0,0,0,18,10.82Zm3.92-8.2a1,1,0,0,0-.54-.54A1,1,0,0,0,21,2H15a1,1,0,0,0,0,2h3.59L8.29,14.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L20,5.41V9a1,1,0,0,0,2,0V3A1,1,0,0,0,21.92,2.62Z\"></path>\n      </svg>\n      <span class=\"css-1riaxdn\">Ir</span>\n    </button>\n  </a>\n</div>\n",
        "mode": "html"
      },
      "pluginVersion": "11.2.0",
      "type": "text"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "fieldMinMax": false,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 2,
        "x": 2,
        "y": 4
      },
      "id": 31,
      "options": {
        "displayMode": "basic",
        "maxVizHeight": 300,
        "minVizHeight": 16,
        "minVizWidth": 8,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "valueMode": "color"
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select bateria from $esq.sensores where id in ($sensor) ",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Bateria",
      "type": "bargauge"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 4,
        "y": 4
      },
      "id": 32,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "select $__timeGroup(tiempo, $__interval), INITCAP('temperatura'), valor as \" \"\r\nfrom $esq.mediciones where $__timeFilter(tiempo) and id_sensor in ($sensor ) and tipo_medicion in ('temperatura')\r\norder by time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ('temperatura')",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Historico Temperatura",
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 11,
        "y": 4
      },
      "id": 48,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select \r\n  ( select valor from $esq.mediciones \r\n  where $__timeFilter(tiempo) \r\n    and id_sensor in ($sensor) \r\n    and tipo_medicion in ('temperatura')\r\n  order by tiempo desc\r\n  limit 1 ) as \"Actual\", \r\n  min(valor) as \"Minimo\", max(valor) as \"Maximo\"\r\nfrom $esq.mediciones \r\nwhere $__timeFilter(tiempo) \r\n  and id_sensor in ($sensor) \r\n  and tipo_medicion in ('temperatura')",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ('temperatura')",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 3,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 14,
        "y": 4
      },
      "id": 50,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "select $__timeGroup(tiempo, $__interval), INITCAP('humedad'), valor as \" \"\r\nfrom $esq.mediciones where $__timeFilter(tiempo) and id_sensor in ($sensor ) and tipo_medicion in ('humedad')\r\norder by time",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ('humedad')",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Historico Humedad",
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "orange",
                "value": null
              }
            ]
          },
          "unit": "humidity"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 21,
        "y": 4
      },
      "id": 49,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select \r\n  ( select valor from $esq.mediciones \r\n  where $__timeFilter(tiempo) \r\n    and id_sensor in ($sensor) \r\n    and tipo_medicion in ('humedad')\r\n  order by tiempo desc\r\n  limit 1 ) as \"Actual\", \r\nmin(valor) as \"Minimo\", max(valor) as \"Maximo\"\r\nfrom $esq.mediciones \r\nwhere $__timeFilter(tiempo) \r\n  and id_sensor in ($sensor) \r\n  and tipo_medicion in ('humedad')",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "select min, max, advertencia, alarma from esq_dash_iot.limites l \r\nwhere l.id_sensor in ($sensor) and l.tipo_medicion in ('humedad')",
          "refId": "config",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "transformations": [
        {
          "id": "configFromData",
          "options": {
            "applyTo": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "configRefId": "config",
            "mappings": [
              {
                "fieldName": "advertencia",
                "handlerArguments": {
                  "threshold": {
                    "color": "yellow"
                  }
                },
                "handlerKey": "threshold1"
              },
              {
                "fieldName": "alarma",
                "handlerKey": "threshold1"
              }
            ]
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "false": {
                  "color": "green",
                  "index": 0,
                  "text": "Activo"
                },
                "true": {
                  "color": "red",
                  "index": 1,
                  "text": "Inactivo"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 6
      },
      "id": 41,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select inactivo as \"Estado\" from $esq.sensores where id in ($sensor)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": {
        "default": false,
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "orange",
                  "index": 0,
                  "text": "Sin Alerta"
                },
                "1": {
                  "color": "green",
                  "index": 1,
                  "text": "Normal"
                },
                "2": {
                  "color": "yellow",
                  "index": 2,
                  "text": "Advertencia"
                },
                "3": {
                  "color": "red",
                  "index": 3,
                  "text": "Alarma"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 2,
        "x": 0,
        "y": 8
      },
      "id": 46,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.2.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P44368ADAD746BC27"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "select $esq.getestadoalertasensor($sensor, '${__from:date}', '${__to:date}') as \"Estado Alerta\"",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "type": "stat"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Bodega Principal",
          "value": "1"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P44368ADAD746BC27"
        },
        "definition": "select id as __value, nombre as __text from esq_dash_iot.areas order by orden",
        "hide": 0,
        "includeAll": false,
        "label": "Area",
        "multi": false,
        "name": "area",
        "options": [],
        "query": "select id as __value, nombre as __text from esq_dash_iot.areas order by orden",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P44368ADAD746BC27"
        },
        "definition": "WITH sensor_data AS ( \n  select id as __value, nombre_sensor as __text from \n  $esq.sensores where id_area in ($area) \n  and case when '$estado_sensor' = 'todos' then true \n    else inactivo::int::text = '$estado_sensor' end\n  and case when '$estado_alerta' = 'todos' then true \n    else \n  ( select esq_dash_iot.getestadoalertasensor(id::text, '${__from:date}', '${__to:date}') )::text = '$estado_alerta' \nend ) select * from sensor_data \nunion all SELECT 0 , 'No Sensor' WHERE NOT exists (SELECT 1 FROM sensor_data);\n\n\n\n\n-- select id as __value, nombre_sensor as __text from $esq.sensores where id_area in ($area) order by sensores.id",
        "hide": 2,
        "includeAll": true,
        "label": "Sensor",
        "multi": false,
        "name": "sensor",
        "options": [],
        "query": "WITH sensor_data AS ( \n  select id as __value, nombre_sensor as __text from \n  $esq.sensores where id_area in ($area) \n  and case when '$estado_sensor' = 'todos' then true \n    else inactivo::int::text = '$estado_sensor' end\n  and case when '$estado_alerta' = 'todos' then true \n    else \n  ( select esq_dash_iot.getestadoalertasensor(id::text, '${__from:date}', '${__to:date}') )::text = '$estado_alerta' \nend ) select * from sensor_data \nunion all SELECT 0 , 'No Sensor' WHERE NOT exists (SELECT 1 FROM sensor_data);\n\n\n\n\n-- select id as __value, nombre_sensor as __text from $esq.sensores where id_area in ($area) order by sensores.id",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "hide": 2,
        "name": "esq",
        "query": "esq_dash_iot",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "todos",
          "value": "todos"
        },
        "hide": 2,
        "name": "estado_alerta",
        "options": [
          {
            "selected": true,
            "text": "todos",
            "value": "todos"
          }
        ],
        "query": "todos",
        "skipUrlSync": false,
        "type": "textbox"
      },
      {
        "current": {
          "selected": false,
          "text": "todos",
          "value": "todos"
        },
        "hide": 2,
        "name": "estado_sensor",
        "options": [],
        "query": "todos",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Detalles de Area",
  "uid": "adxtqhy3gz4zkb",
  "version": 1,
  "weekStart": ""
}
